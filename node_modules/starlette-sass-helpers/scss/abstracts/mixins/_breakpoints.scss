/**
 * Responsive Media Queries
 *
 * How to use:
 * --- @include breakpoint(sm);
 * --- @include breakpoint(sm, max);
 * --- @include breakpoint(600px, max);
 *
 * $breakpoint options:
 * --- xs
 * --- sm
 * --- md
 * --- lg
 * --- xl
 * --- xxl
 * --- 600px
 *
 * $direction options:
 * --- min
 * --- max
 * --- between
 *
 * $direction "between":
 * If you use this with (example) $breakpoint "md" then it will use "md" as the min width and "lg" (next breakpoint) as the max width.
 */
@mixin breakpoint( $breakpoint: md, $direction: min ) {
	$breakpoint-value: map-get($breakpoints, $breakpoint);

	// Create media query if there are no errors
	// Starting with a specific breakpoint key (eg. sm, md, lg
	@if map-has-key( $breakpoints, $breakpoint ) {
		@if $direction == max {
			@media (max-width: ($breakpoint-value - 1)) {
				@content;
			}
		} @else if $direction == min {
			@media (min-width: $breakpoint-value) {
				@content;
			}
		} @else if $direction == between {
			$breakpoint-next-value: map-next-value( $breakpoint, $breakpoints );
			@media (min-width: $breakpoint-value) and (max-width: ($breakpoint-next-value - 1)) {
				@content;
			}
		} @else {
			@media ($direction: $breakpoint-value) {
				@content;
			}
		}
	}

	// If a custom value set for $breakpoint (eg. 600px)
	@else {
		@if $direction == max {
			@media (max-width: $breakpoint) {
				@content;
			}
		} @else if $direction == min {
			@media (min-width: $breakpoint) {
				@content;
			}
		} @else {
			@media ($direction: $breakpoint) {
				@content;
			}
		}
	}
}

@mixin desktop {
  @include breakpoint(md, min) {
    @content;
  }
}

@mixin mobile {
  @include breakpoint(md, max) {
    @content;
  }
}
